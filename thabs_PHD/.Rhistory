number = 5) # number of folds
set.seed(33)
results <- rfe(model_dataset[,1:17,19:20], model_dataset[[18]], sizes = c(1:5), rfeControl = control)
var_selected <- predictors(results)
finalmodel_dataset <- model_dataset %>%
# mutate(outcome = as.factor(utcome))%>%
dplyr::select(mortality, addisons_disease_advanced_HIV, var_selected)
train_control <- trainControl(method = "cv", number = 5, #repeats = 100,
savePredictions = T) #repeated
set.seed(33)
model <- train(mortality ~ .,
data = finalmodel_dataset,
trControl = train_control,
method = "glm",
family = binomial()
)
set.seed(33)
results <- rfe(model_dataset[,1:17,19:20], model_dataset[[18]], sizes = c(1:5), rfeControl = control)
var_selected <- predictors(results)
finalmodel_dataset <- model_dataset %>%
# mutate(outcome = as.factor(utcome))%>%
dplyr::select(mortality, addisons_disease_advanced_HIV, var_selected)
train_control <- trainControl(method = "cv", number = 5, #repeats = 100,
savePredictions = T) #repeated
set.seed(33)
model <- train(mortality ~ .,
data = finalmodel_dataset,
trControl = train_control,
method = "glm",
family = binomial()
)
control <- rfeControl(functions = rfFuncs, # random forest
method = "cv", # repeated cvrepeated
# repeats = 3, # number of repeats
number = 5) # number of folds
set.seed(33)
results <- rfe(model_dataset[,1:17,19:20], model_dataset[[18]], sizes = c(1:5), rfeControl = control)
var_selected <- predictors(results)
finalmodel_dataset <- model_dataset %>%
# mutate(outcome = as.factor(utcome))%>%
dplyr::select(mortality, addisons_disease_advanced_HIV, var_selected)
train_control <- trainControl(method = "cv", number = 5, #repeats = 100,
savePredictions = T) #repeated
set.seed(33)
model <- train(mortality ~ .,
data = finalmodel_dataset,
trControl = train_control,
method = "glm",
family = binomial()
)
sjPlot::tab_model(model, show.icc = FALSE, show.re.var = FALSE)
control <- rfeControl(functions = rfFuncs, # random forest
method = "repeatedcv", # repeated cvrepeated
repeats = 3, # number of repeats
number = 5) # number of folds
set.seed(33)
results <- rfe(model_dataset[,1:17,19:20], model_dataset[[18]], sizes = c(1:5), rfeControl = control)
var_selected <- predictors(results)
finalmodel_dataset <- model_dataset %>%
# mutate(outcome = as.factor(utcome))%>%
dplyr::select(mortality, addisons_disease_advanced_HIV, var_selected)
train_control <- trainControl(method = "cv", number = 5, #repeats = 100,
savePredictions = T) #repeated
set.seed(33)
model <- train(mortality ~ .,
data = finalmodel_dataset,
trControl = train_control,
method = "glm",
family = binomial()
)
sjPlot::tab_model(model, show.icc = FALSE, show.re.var = FALSE)
control <- rfeControl(functions = rfFuncs, # random forest
method = "repeatedcv", # repeated cvrepeated
repeats = 3, # number of repeats
number = 5) # number of folds
set.seed(33)
results <- rfe(model_dataset[,1:17,19:20], model_dataset[[18]], sizes = c(1:5), rfeControl = control)
var_selected <- predictors(results)
finalmodel_dataset <- model_dataset %>%
# mutate(outcome = as.factor(utcome))%>%
dplyr::select(mortality, addisons_disease_advanced_HIV, var_selected)
train_control <- trainControl(method = "cv", number = 5, #repeats = 100,
savePredictions = T) #repeated
set.seed(33)
model <- train(mortality ~ .,
data = finalmodel_dataset,
trControl = train_control,
method = "glm",
family = binomial()
)
control <- rfeControl(functions = rfFuncs, # random forest
method = "cv", # repeated cvrepeated
# repeats = 3, # number of repeats
number = 5) # number of folds
set.seed(33)
results <- rfe(model_dataset[,1:17,19:20], model_dataset[[18]], sizes = c(1:5), rfeControl = control)
var_selected <- predictors(results)
finalmodel_dataset <- model_dataset %>%
# mutate(outcome = as.factor(utcome))%>%
dplyr::select(mortality, addisons_disease_advanced_HIV, var_selected)
train_control <- trainControl(method = "cv", number = 5, #repeats = 100,
savePredictions = T) #repeated
set.seed(33)
model <- train(mortality ~ .,
data = finalmodel_dataset,
trControl = train_control,
method = "glm",
family = binomial()
)
# sjPlot::tab_model(model, show.icc = FALSE, show.re.var = FALSE)
final_table <- data.frame(exp(ci(model$finalModel)[2:4,1:3])) %>%
mutate(Variable = c("Addison's disease advanced HIV", "Lymphocyte count", "BP diastolic")) %>%
dplyr::select(Variable, Estimate, CI.lower, CI.upper)
row.names(final_table) <- 1:length(final_table$Variable)
final_table %>%
kable(caption = "Cross validation model") %>%
kable_paper("hover", full_width = F) %>%
kable_classic(full_width = F, html_font = "Arial")%>%
kable_styling(latex_options = "HOLD_position")
final_table <- data.frame(exp(ci(model$finalModel)[2:4,1:3])) %>%
mutate(Variable = c("Addison's disease advanced HIV", "Lymphocyte count", "BP diastolic")) %>%
dplyr::select(Variable, Estimate, CI.lower, CI.upper)
row.names(final_table) <- 1:length(final_table$Variable)
data.frame(final_table) %>%
kable(caption = "Cross validation model") %>%
kable_paper("hover", full_width = F) %>%
kable_classic(full_width = F, html_font = "Arial")%>%
kable_styling(latex_options = "HOLD_position")
write.csv(final_table, 'final_table.csv')
30/431
30/(431-113)
unlink("analysis_file_cache", recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache=TRUE)
knitr::opts_chunk$set(fig.pos = 'H')
knitr::opts_chunk$set(results = 'asis')
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(magrittr)
library(knitr)
library(kableExtra)
library(tinytex)
library(gmodels)
library(readxl)
# library(MASS)
library(gtsummary)
library(caret)
library(leaps)
library(MASS)
library(predtools)
library(randomForest)
library(mice)
library(psfmi)
library(survival)
final_dataset <- read_csv("final_dataset.csv", show_col_types = F) %>%
mutate(addisons_disease = ifelse(`Random cortisol result` < 500 & (`Synacthen: 30 minute cortisol result`< 550 & `ACTH result`> 13.9), 1, 0)) #%>%
# dat <- final_dataset %>%
# dplyr::select(`Hospital folder number`,`Random cortisol result`, `ACTH sample drawn`, `ACTH result`, `Synacthen: 0 minute cortisol result`, `Synacthen: 30 minute cortisol result`, addisons_disease)
# write.csv(dat, 'outcome_dat.csv')
x=load(trial)
names(trial)
View(trial)
table(final_dataset$`3 followup_patientstatus`)
follow_up <- final_dataset %>%
mutate(`3 followup_done` = as.factor(`3 followup_done`),
`3 followup_patientstatus` = as.factor(`3 followup_patientstatus`),
`3 followup_patientcondition` = as.factor(`3 followup_patientcondition`),
`6 followup_done` = as.factor(`6 followup_done`),
`6 followup_patientstatus` = as.factor(`6 followup_patientstatus`),
`6 followup_patientcondition` = as.factor(`6 followup_patientcondition`),
`12 followup_done` = as.factor(`12 followup_done`),
`12 followup_patientstatus` = as.factor(`12 followup_patientstatus`),
`12 followup_patientcondition` = as.factor(`12 followup_patientcondition`),
`If deceased, cause of death` = as.factor(`If deceased, cause of death`)
) %>%
dplyr::select( `3 followup_done`, `3 followup_patientstatus`, `3 followup_patientcondition`, `6 followup_done`, `6 followup_patientstatus`, `6 followup_patientcondition`, `12 followup_done`, `12 followup_patientstatus`, `12 followup_patientcondition`, `If deceased, cause of death`, addisons_disease)
View(follow_up)
View(final_dataset)
x <- final_dataset%>%
dplyr::select(`Hospital folder number`, `3 followup_patientstatus`,
`6 followup_patientstatus`, `12 followup_patientstatus`
) %>%
mutate(flag1 = ifelse(`3 followup_patientstatus` == "Deceased --> EXIT form", 3, NA),
flag2 = ifelse(`6 followup_patientstatus` == "Deceased --> EXIT form", 6, NA),
flag3 = ifelse(`12 followup_patientstatus` == "Deceased --> EXIT form", 12, NA)) %>%
dplyr::select(`Hospital folder number`, flag1:flag3)
x <- final_dataset%>%
dplyr::select(`Hospital folder number`, `3 followup_patientstatus`,
`6 followup_patientstatus`, `12 followup_patientstatus`
) %>%
mutate(flag1 = ifelse(`3 followup_patientstatus` == "Deceased --> EXIT form", 3, NA),
flag2 = ifelse(`6 followup_patientstatus` == "Deceased --> EXIT form", 6, NA),
flag3 = ifelse(`12 followup_patientstatus` == "Deceased --> EXIT form", 12, NA)) %>%
dplyr::select(`Hospital folder number`, flag1:flag3) %>%
pivot_longer(cols = c(flag1:flag3),
names_to = 'col_num',
values_to = 'ttdeath') %>%
dplyr::select(`Hospital folder number`, ttdeath)
View(x)
x <- final_dataset%>%
dplyr::select(`Hospital folder number`, `3 followup_patientstatus`,
`6 followup_patientstatus`, `12 followup_patientstatus`
) %>%
mutate(flag1 = ifelse(`3 followup_patientstatus` == "Deceased --> EXIT form", 3, NA),
flag2 = ifelse(`6 followup_patientstatus` == "Deceased --> EXIT form", 6, NA),
flag3 = ifelse(`12 followup_patientstatus` == "Deceased --> EXIT form", 12, NA)) %>%
dplyr::select(`Hospital folder number`, flag1:flag3) %>%
pivot_longer(cols = c(flag1:flag3),
names_to = 'col_num',
values_to = 'time to death') %>%
dplyr::select(`Hospital folder number`, `time to death`) %>%
group_by(`Hospital folder number`) %>%
mutate(ttdeath = min(`time to death`, na.rm = T)) %>%
ungroup() %>%
distinct(`Hospital folder number`, .keep_all = T)
View(x)
x <- final_dataset%>%
dplyr::select(`Hospital folder number`, `3 followup_patientstatus`,
`6 followup_patientstatus`, `12 followup_patientstatus`
) %>%
mutate(flag1 = ifelse(`3 followup_patientstatus` == "Deceased --> EXIT form", 3, 15),
flag2 = ifelse(`6 followup_patientstatus` == "Deceased --> EXIT form", 6, 15),
flag3 = ifelse(`12 followup_patientstatus` == "Deceased --> EXIT form", 12, 15)) %>%
dplyr::select(`Hospital folder number`, flag1:flag3) %>%
pivot_longer(cols = c(flag1:flag3),
names_to = 'col_num',
values_to = 'time to death') %>%
dplyr::select(`Hospital folder number`, `time to death`) %>%
group_by(`Hospital folder number`) %>%
mutate(ttdeath = min(`time to death`, na.rm = T)) %>%
ungroup() %>%
distinct(`Hospital folder number`, .keep_all = T) %>%
mutate()
x <- final_dataset%>%
dplyr::select(`Hospital folder number`, `3 followup_patientstatus`,
`6 followup_patientstatus`, `12 followup_patientstatus`
) %>%
mutate(flag1 = ifelse(`3 followup_patientstatus` == "Deceased --> EXIT form", 3, 15),
flag2 = ifelse(`6 followup_patientstatus` == "Deceased --> EXIT form", 6, 15),
flag3 = ifelse(`12 followup_patientstatus` == "Deceased --> EXIT form", 12, 15)) %>%
dplyr::select(`Hospital folder number`, flag1:flag3) %>%
pivot_longer(cols = c(flag1:flag3),
names_to = 'col_num',
values_to = 'time to death') %>%
dplyr::select(`Hospital folder number`, `time to death`) %>%
group_by(`Hospital folder number`) %>%
mutate(ttdeath = min(`time to death`, na.rm = T)) %>%
ungroup() %>%
distinct(`Hospital folder number`, .keep_all = T)
View(x)
x <- final_dataset%>%
dplyr::select(`Hospital folder number`, `3 followup_patientstatus`,
`6 followup_patientstatus`, `12 followup_patientstatus`
) %>%
mutate(flag1 = ifelse(`3 followup_patientstatus` == "Deceased --> EXIT form", 3, 15),
flag2 = ifelse(`6 followup_patientstatus` == "Deceased --> EXIT form", 6, 15),
flag3 = ifelse(`12 followup_patientstatus` == "Deceased --> EXIT form", 12, 15)) %>%
dplyr::select(`Hospital folder number`, flag1:flag3) %>%
pivot_longer(cols = c(flag1:flag3),
names_to = 'col_num',
values_to = 'time to death') %>%
dplyr::select(`Hospital folder number`, `time to death`) %>%
group_by(`Hospital folder number`) %>%
mutate(ttdeath = min(`time to death`, na.rm = T))
x <- final_dataset%>%
dplyr::select(`Hospital folder number`, `3 followup_patientstatus`,
`6 followup_patientstatus`, `12 followup_patientstatus`
) %>%
mutate(flag1 = ifelse(`3 followup_patientstatus` == "Deceased --> EXIT form", 3, NA),
flag2 = ifelse(`6 followup_patientstatus` == "Deceased --> EXIT form", 6, NA),
flag3 = ifelse(`12 followup_patientstatus` == "Deceased --> EXIT form", 12, NA)) %>%
dplyr::select(`Hospital folder number`, flag1:flag3) %>%
pivot_longer(cols = c(flag1:flag3),
names_to = 'col_num',
values_to = 'time to death') %>%
dplyr::select(`Hospital folder number`, `time to death`) %>%
group_by(`Hospital folder number`) %>%
mutate(ttdeath = min(`time to death`, na.rm = T)) %>%
ungroup() %>%
distinct(`Hospital folder number`, .keep_all = T)
x <- final_dataset%>%
dplyr::select(`Hospital folder number`, `3 followup_patientstatus`,
`6 followup_patientstatus`, `12 followup_patientstatus`
) %>%
mutate(flag1 = ifelse(`3 followup_patientstatus` == "Deceased --> EXIT form", 3, NA),
flag2 = ifelse(`6 followup_patientstatus` == "Deceased --> EXIT form", 6, NA),
flag3 = ifelse(`12 followup_patientstatus` == "Deceased --> EXIT form", 12, NA)) %>%
dplyr::select(`Hospital folder number`, flag1:flag3) %>%
pivot_longer(cols = c(flag1:flag3),
names_to = 'col_num',
values_to = 'time to death') %>%
dplyr::select(`Hospital folder number`, `time to death`) %>%
group_by(`Hospital folder number`) %>%
mutate(ttdeath = min(`time to death`, na.rm = T)) %>%
ungroup()
x <- final_dataset%>%
dplyr::select(`Hospital folder number`, `3 followup_patientstatus`,
`6 followup_patientstatus`, `12 followup_patientstatus`
) %>%
mutate(flag1 = ifelse(`3 followup_patientstatus` == "Deceased --> EXIT form", 3, NA),
flag2 = ifelse(`6 followup_patientstatus` == "Deceased --> EXIT form", 6, NA),
flag3 = ifelse(`12 followup_patientstatus` == "Deceased --> EXIT form", 12, NA)) %>%
dplyr::select(`Hospital folder number`, flag1:flag3) %>%
pivot_longer(cols = c(flag1:flag3),
names_to = 'col_num',
values_to = 'time to death') %>%
dplyr::select(`Hospital folder number`, `time to death`) %>%
group_by(`Hospital folder number`) %>%
mutate(ttdeath = min(`time to death`, na.rm = T)) %>%
ungroup() %>%
mutate(ttdeath = ifelse(is.infinite(ttdeath), NA, ttdeath))
dt01 <- final_dataset %>%
dplyr::select(`Hospital folder number`, `Primary medical conditions (1)`,
`Primary medical conditions (2)`,
`Primary medical conditions (3)`,
`Primary medical conditions (4)`,
`Primary medical conditions (5)`,
`Primary medical conditions (6)`,
`Primary medical conditions (7)`,
`Primary medical conditions (8)`,
`Primary medical conditions (9)`,
`Primary medical conditions (10)`) %>%
pivot_longer(cols = c(`Primary medical conditions (1)`,
`Primary medical conditions (2)`,
`Primary medical conditions (3)`,
`Primary medical conditions (4)`,
`Primary medical conditions (5)`,
`Primary medical conditions (6)`,
`Primary medical conditions (7)`,
`Primary medical conditions (8)`,
`Primary medical conditions (9)`,
`Primary medical conditions (10)`),
names_to = 'col_num',
values_to = 'Primary medical conditions') %>%
dplyr::select(`Hospital folder number`, `Primary medical conditions`) %>%
filter(!is.na(`Primary medical conditions`))
dt02 <- final_dataset %>%
dplyr::select(`Hospital folder number`, `Co-existing medical conditions (1)`,
`Co-existing medical conditions (2)`,
`Co-existing medical conditions (3)`,
`Co-existing medical conditions (4)`,
`Co-existing medical conditions (5)`,
`Co-existing medical conditions (6)`,
`Co-existing medical conditions (7)`,
`Co-existing medical conditions (8)`,
`Co-existing medical conditions (9)`,
`Co-existing medical conditions (10)`) %>%
pivot_longer(cols = c(`Co-existing medical conditions (1)`,
`Co-existing medical conditions (2)`,
`Co-existing medical conditions (3)`,
`Co-existing medical conditions (4)`,
`Co-existing medical conditions (5)`,
`Co-existing medical conditions (6)`,
`Co-existing medical conditions (7)`,
`Co-existing medical conditions (8)`,
`Co-existing medical conditions (9)`,
`Co-existing medical conditions (10)`),
names_to = 'col_num',
values_to = 'Co-existing medical conditions') %>%
dplyr::select(`Hospital folder number`, `Co-existing medical conditions`) %>%
filter(!is.na(`Co-existing medical conditions`))
had_TB <- "TB"
dt01_1 <- dt01 %>%
# left_join(dt02, by = 'Hospital folder number') %>%
mutate(primary_med_condition_TB = ifelse(`Primary medical conditions`=='TB. IRIS' | `Primary medical conditions`=='TB Iris', FALSE, ifelse(`Primary medical conditions`=='MDR', TRUE,grepl(had_TB, `Primary medical conditions`, fixed = TRUE)))) %>%
group_by(`Hospital folder number`) %>%
mutate(tuberculosis = max(as.numeric(primary_med_condition_TB)),
n_primary_med_conditions = as.factor(max(1:length(`Hospital folder number`)))
) %>%
distinct(`Hospital folder number`, .keep_all = T) %>%
dplyr::select(`Hospital folder number`, tuberculosis,n_primary_med_conditions)
dt02_1 <- dt02 %>%
# left_join(dt02, by = 'Hospital folder number') %>%
mutate(Coexisting_medical_conditions_TB = #ifelse(`Co-existing medical conditions`=='TB. IRIS' | `Co-existing medical conditions` =='TB Iris', FALSE,
grepl(had_TB, `Co-existing medical conditions`, fixed = TRUE)) %>%
group_by(`Hospital folder number`) %>%
mutate(tuberculosis_2 = max(as.numeric(Coexisting_medical_conditions_TB)),
n_Coexisting_medical_conditions = as.factor(max(1:length(`Hospital folder number`)))
) %>%
distinct(`Hospital folder number`, .keep_all = T) %>%
dplyr::select(`Hospital folder number`, tuberculosis_2, n_Coexisting_medical_conditions)
dt03 <- dt01_1 %>%
full_join(dt02_1, by = 'Hospital folder number') %>%
dplyr::select(`Hospital folder number`, n_primary_med_conditions, n_Coexisting_medical_conditions,)
table_mortality <- final_dataset %>%
dplyr::select(`Hospital folder number`, `3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`) %>%
pivot_longer(cols = c(`3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`),
names_to = 'col_num',
values_to = 'followup_patientstatus') %>%
dplyr::select(`Hospital folder number`, `followup_patientstatus`) %>%
group_by(`Hospital folder number`) %>%
mutate(mortality = ifelse(followup_patientstatus == 'Deceased --> EXIT form', 1,ifelse(followup_patientstatus == 'Alive', 0, 0))) %>%
dplyr::select(`Hospital folder number`, mortality)
table_mortality[is.na(table_mortality)] <- 0
table_mortality1 <- table_mortality %>%
group_by(`Hospital folder number`) %>%
mutate(mortality = max(mortality)) %>%
distinct(`Hospital folder number`, .keep_all = T)
time_to_death <- final_dataset%>%
dplyr::select(`Hospital folder number`, `3 followup_patientstatus`,
`6 followup_patientstatus`, `12 followup_patientstatus`
) %>%
mutate(flag1 = ifelse(`3 followup_patientstatus` == "Deceased --> EXIT form", 3, NA),
flag2 = ifelse(`6 followup_patientstatus` == "Deceased --> EXIT form", 6, NA),
flag3 = ifelse(`12 followup_patientstatus` == "Deceased --> EXIT form", 12, NA)) %>%
dplyr::select(`Hospital folder number`, flag1:flag3) %>%
pivot_longer(cols = c(flag1:flag3),
names_to = 'col_num',
values_to = 'time to death') %>%
dplyr::select(`Hospital folder number`, `time to death`) %>%
group_by(`Hospital folder number`) %>%
mutate(ttdeath = min(`time to death`, na.rm = T)) %>%
ungroup() %>%
mutate(ttdeath = ifelse(is.infinite(ttdeath), NA, ttdeath))
time_to_death <- final_dataset%>%
dplyr::select(`Hospital folder number`, `3 followup_patientstatus`,
`6 followup_patientstatus`, `12 followup_patientstatus`
) %>%
mutate(flag1 = ifelse(`3 followup_patientstatus` == "Deceased --> EXIT form", 3, NA),
flag2 = ifelse(`6 followup_patientstatus` == "Deceased --> EXIT form", 6, NA),
flag3 = ifelse(`12 followup_patientstatus` == "Deceased --> EXIT form", 12, NA)) %>%
dplyr::select(`Hospital folder number`, flag1:flag3) %>%
pivot_longer(cols = c(flag1:flag3),
names_to = 'col_num',
values_to = 'time to death') %>%
dplyr::select(`Hospital folder number`, `time to death`) %>%
group_by(`Hospital folder number`) %>%
mutate(ttdeath = min(`time to death`, na.rm = T)) %>%
ungroup() %>%
mutate(ttdeath = ifelse(is.infinite(ttdeath), NA, ttdeath)) %>%
distinct(`Hospital folder number`, .keep_all = T) %>%
dplyr::select(`Hospital folder number`, ttdeath)
table_mortality1 <- table_mortality1 %>%
left_join(time_to_death, by = 'Hospital folder number')
View(table_mortality1)
table_4data <- final_dataset %>%
left_join(table_mortality1, by = 'Hospital folder number') %>%
mutate(addisons_disease_advanced_HIV = ifelse(addisons_disease==1 & `CD4 < 100`==1 & `Oral or inhaled steroids in the last three months`=='No', 1, 0)) %>%
mutate(HIV_duration = as.numeric(as.Date(`Date of enrolment in study`, format='%m/%d/%Y') - as.Date(`HIV, when diagnosed`, format='%m/%d/%Y')),
enrol = as.Date(`Date of enrolment in study`, format = '%m/%d/%Y'),
diagnosed = as.Date(`HIV, when diagnosed`, format = '%m/%d/%Y')) %>%
dplyr::select(`Hospital folder number`, Ethnicity, Gender, `Total CD4 count...9`, `Random cortisol result`, `Synacthen: 30 minute cortisol result`, `Synacthen: 0 minute cortisol result`, `ACTH result`, Neutrophils, `Lymphocyte count`, Haemoglobin, Sodium, Hypoglycaemia, `BP (systolic)`, `BP (diastolic)`, `Current tuberculosis`, `Duration of current illness`, HIV_duration, addisons_disease_advanced_HIV, mortality) %>%
left_join(dt03, by = 'Hospital folder number')
View(table_4data)
table_4data <- final_dataset %>%
left_join(table_mortality1, by = 'Hospital folder number') %>%
mutate(addisons_disease_advanced_HIV = ifelse(addisons_disease==1 & `CD4 < 100`==1 & `Oral or inhaled steroids in the last three months`=='No', 1, 0)) %>%
mutate(HIV_duration = as.numeric(as.Date(`Date of enrolment in study`, format='%m/%d/%Y') - as.Date(`HIV, when diagnosed`, format='%m/%d/%Y')),
enrol = as.Date(`Date of enrolment in study`, format = '%m/%d/%Y'),
diagnosed = as.Date(`HIV, when diagnosed`, format = '%m/%d/%Y')) %>%
dplyr::select(`Hospital folder number`, Ethnicity, Gender, `Total CD4 count...9`, `Random cortisol result`, `Synacthen: 30 minute cortisol result`, `Synacthen: 0 minute cortisol result`, `ACTH result`, Neutrophils, `Lymphocyte count`, Haemoglobin, Sodium, Hypoglycaemia, `BP (systolic)`, `BP (diastolic)`, `Current tuberculosis`, `Duration of current illness`, HIV_duration, addisons_disease_advanced_HIV, mortality, ttdeath) %>%
left_join(dt03, by = 'Hospital folder number')
table_4Adata_1_1 <- table_4data %>%
dplyr::select(Ethnicity, Gender, `Total CD4 count...9`, `Random cortisol result`, `Synacthen: 30 minute cortisol result`, `Synacthen: 0 minute cortisol result`, `ACTH result`, Neutrophils, `Lymphocyte count`, Haemoglobin, mortality, ttdeath) %>%
tbl_uvregression(
trial[c("ttdeath", "mortality", 'Ethnicity', 'Gender', 'Total CD4 count...9', 'Random cortisol result', 'Synacthen: 30 minute cortisol result', 'Synacthen: 0 minute cortisol result', 'ACTH result', 'Neutrophils', 'Lymphocyte count', 'Haemoglobin')],
method = coxph,
y = Surv(ttdeath, mortality),
exponentiate = TRUE,
pvalue_fun = function(x) style_pvalue(x, digits = 2)
) %>%
modify_header(label = "Variable") %>% # update the column header
bold_labels()
table_4Adata_1_1 <- table_4data %>%
dplyr::select(Ethnicity, Gender, `Total CD4 count...9`, `Random cortisol result`, `Synacthen: 30 minute cortisol result`, `Synacthen: 0 minute cortisol result`, `ACTH result`, Neutrophils, `Lymphocyte count`, Haemoglobin, mortality, ttdeath) #%>%
tbl_uvregression(
table_4Adata_1_1[c("ttdeath", "mortality", 'Ethnicity', 'Gender', 'Total CD4 count...9', 'Random cortisol result', 'Synacthen: 30 minute cortisol result', 'Synacthen: 0 minute cortisol result', 'ACTH result', 'Neutrophils', 'Lymphocyte count', 'Haemoglobin')],
method = coxph,
y = Surv(ttdeath, mortality),
exponentiate = TRUE,
pvalue_fun = function(x) style_pvalue(x, digits = 2)
) %>%
modify_header(label = "Variable") %>% # update the column header
bold_labels()
table_4Adata_1_1 <- table_4data %>%
mutate(`Total CD4 count` = `Total CD4 count...9`) %>%
dplyr::select(Ethnicity, Gender, `Total CD4 count`, `Random cortisol result`, `Synacthen: 30 minute cortisol result`, `Synacthen: 0 minute cortisol result`, `ACTH result`, Neutrophils, `Lymphocyte count`, Haemoglobin, mortality, ttdeath) #%>%
tbl_uvregression(
table_4Adata_1_1[c("ttdeath", "mortality", 'Ethnicity', 'Gender', 'Total CD4 count', 'Random cortisol result', 'Synacthen: 30 minute cortisol result', 'Synacthen: 0 minute cortisol result', 'ACTH result', 'Neutrophils', 'Lymphocyte count', 'Haemoglobin')],
method = coxph,
y = Surv(ttdeath, mortality),
exponentiate = TRUE,
pvalue_fun = function(x) style_pvalue(x, digits = 2)
) %>%
modify_header(label = "Variable") %>% # update the column header
bold_labels()
table_4Adata_1_1
tbl_uvregression(
table_4Adata_1_1[c("ttdeath", "mortality", 'Ethnicity', 'Gender', 'Total CD4 count', 'Random cortisol result', 'Synacthen: 30 minute cortisol result', 'Synacthen: 0 minute cortisol result', 'ACTH result', 'Neutrophils', 'Lymphocyte count', 'Haemoglobin')],
method = coxph,
y = Surv(ttdeath, mortality),
exponentiate = TRUE,
pvalue_fun = function(x) style_pvalue(x, digits = 2)
) %>%
modify_header(label = "Variable") %>% # update the column header
bold_labels()
table_4Adata_2_1 <- table_4data %>%
mutate(`HIV duration` = HIV_duration,
`Number of primary med conditions` = n_primary_med_conditions,
`Number Coexisting medical conditions`  = n_Coexisting_medical_conditions,
`Addisons disease advanced HIV` = addisons_disease_advanced_HIV) %>%
dplyr::select(Sodium, Hypoglycaemia, `BP (systolic)`, `BP (diastolic)`, `Current tuberculosis`, `Duration of current illness`, `HIV duration`, `Number of primary med conditions`, `Number Coexisting medical conditions`, `Addisons disease advanced HIV`, mortality, ttdeath)
tbl_uvregression(
table_4Adata_2_1[c("ttdeath", "mortality", 'Sodium', 'Hypoglycaemia', 'BP (systolic)', 'BP (diastolic)', 'Current tuberculosis', 'Duration of current illness', 'HIV duration', 'Number of primary med conditions', 'Number Coexisting medical conditions', 'Addisons disease advanced HIV')],
method = coxph,
y = Surv(ttdeath, mortality),
exponentiate = TRUE,
pvalue_fun = function(x) style_pvalue(x, digits = 2)
) %>%
modify_header(label = "Variable") %>% # update the column header
bold_labels()
