)
signs_table42 <- final_dataset %>%
mutate(outcome_advanced_HIV = ifelse(outcome==1 & `CD4 < 100`==1 & `Oral or inhaled steroids in the last three months`=='No', 1, 0)) %>%
mutate(
`Full blood count (FBC) result available` = as.factor(`Full blood count (FBC) result available`),
`Differential on FBC available` = as.factor(`Differential on FBC available`),
`Aetiology of anaemia` = as.factor(`Aetiology of anaemia`)
) %>%
dplyr::select(Creatinine, `Full blood count (FBC) result available`, Haemoglobin, `White cell count`, Platelets, MCV, `Differential on FBC available`, Neutrophils, `Lymphocyte count`, Eosinophils, Basophils, `Aetiology of anaemia`, outcome_advanced_HIV)
tbl_uvregression(
signs_table42[c('Creatinine', 'Full blood count (FBC) result available', 'Haemoglobin', 'White cell count', 'Platelets', 'MCV', 'Differential on FBC available', 'Neutrophils', 'Lymphocyte count', 'Eosinophils', 'Basophils', 'Aetiology of anaemia', 'outcome_advanced_HIV')],
method = glm,
y = outcome_advanced_HIV,
method.args = list(family = binomial),
exponentiate = TRUE
)
ctscan2 <- final_dataset %>%
mutate(outcome_advanced_HIV = ifelse(outcome==1 & `CD4 < 100`==1 & `Oral or inhaled steroids in the last three months`=='No', 1, 0)) %>%
mutate(`CT scan done` = as.factor(`CT scan done`),
Nodularity = as.factor(Nodularity),
`Bilateral adrenal enlargement` = as.factor(`Bilateral adrenal enlargement`),
`Calcification` = as.factor(`Calcification`),
Atrophy = as.factor(Atrophy),
Haemorrhage = as.factor(Haemorrhage),
`Outcome of hospitalization` = as.factor(`Outcome of hospitalization`)) %>%
dplyr::select(`CT scan done`, `Bilateral adrenal enlargement`, `Calcification`, Atrophy, Haemorrhage, Nodularity, `Outcome of hospitalization`, outcome_advanced_HIV)
tbl_uvregression(
ctscan2[c('CT scan done', 'Bilateral adrenal enlargement', 'Calcification', 'Atrophy', 'Haemorrhage', 'Nodularity', 'Outcome of hospitalization', 'outcome_advanced_HIV')],
method = glm,
y = outcome_advanced_HIV,
method.args = list(family = binomial),
exponentiate = TRUE
)
tbl_uvregression(
ctscan2[c(#'CT scan done',
'Bilateral adrenal enlargement', 'Calcification', 'Atrophy', 'Haemorrhage', 'Nodularity', 'Outcome of hospitalization', 'outcome_advanced_HIV')],
method = glm,
y = outcome_advanced_HIV,
method.args = list(family = binomial),
exponentiate = TRUE
)
tbl_uvregression(
ctscan2[c(#'CT scan done',
# 'Bilateral adrenal enlargement',
'Calcification', 'Atrophy', 'Haemorrhage', 'Nodularity', 'Outcome of hospitalization', 'outcome_advanced_HIV')],
method = glm,
y = outcome_advanced_HIV,
method.args = list(family = binomial),
exponentiate = TRUE
)
tbl_uvregression(
ctscan2[c(#'CT scan done',
# 'Bilateral adrenal enlargement',
# 'Calcification',
'Atrophy', 'Haemorrhage', 'Nodularity', 'Outcome of hospitalization', 'outcome_advanced_HIV')],
method = glm,
y = outcome_advanced_HIV,
method.args = list(family = binomial),
exponentiate = TRUE
)
View(ctscan2)
tbl_uvregression(
ctscan2[c(#'CT scan done',
# 'Bilateral adrenal enlargement',
# 'Calcification',
# 'Atrophy',
# 'Haemorrhage', 'Nodularity',
'Outcome of hospitalization', 'outcome_advanced_HIV')],
method = glm,
y = outcome_advanced_HIV,
method.args = list(family = binomial),
exponentiate = TRUE
)
follow_up2 <- final_dataset %>%
mutate(outcome_advanced_HIV = ifelse(outcome==1 & `CD4 < 100`==1 & `Oral or inhaled steroids in the last three months`=='No', 1, 0)) %>%
mutate(`3 followup_done` = as.factor(`3 followup_done`),
`3 followup_patientstatus` = as.factor(`3 followup_patientstatus`),
`3 followup_patientcondition` = as.factor(`3 followup_patientcondition`),
`6 followup_done` = as.factor(`6 followup_done`),
`6 followup_patientstatus` = as.factor(`6 followup_patientstatus`),
`6 followup_patientcondition` = as.factor(`6 followup_patientcondition`),
`12 followup_done` = as.factor(`12 followup_done`),
`12 followup_patientstatus` = as.factor(`12 followup_patientstatus`),
`12 followup_patientcondition` = as.factor(`12 followup_patientcondition`),
`If deceased, cause of death` = as.factor(`If deceased, cause of death`)
) %>%
dplyr::select(`3 followup_done`, `3 followup_patientstatus`, `3 followup_patientcondition`, `6 followup_done`, `6 followup_patientstatus`, `6 followup_patientcondition`, `12 followup_done`, `12 followup_patientstatus`, `12 followup_patientcondition`, `If deceased, cause of death`, outcome_advanced_HIV)
tbl_uvregression(
follow_up2[c('3 followup_done', '3 followup_patientstatus', '3 followup_patientcondition', '6 followup_done', '6 followup_patientstatus', '6 followup_patientcondition', '12 followup_done', '12 followup_patientstatus', '12 followup_patientcondition', 'If deceased, cause of death', 'outcome_advanced_HIV')],
method = glm,
y = outcome_advanced_HIV,
method.args = list(family = binomial),
exponentiate = TRUE
)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache=TRUE)
knitr::opts_chunk$set(fig.pos = 'H')
knitr::opts_chunk$set(results = 'asis')
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(magrittr)
library(knitr)
library(kableExtra)
library(tinytex)
library(gmodels)
library(readxl)
# library(MASS)
library(gtsummary)
final_dataset <- read_csv("final_dataset.csv", show_col_types = F) %>%
mutate(outcome = ifelse(`Random cortisol result` < 500 & (`Synacthen: 30 minute cortisol result`< 550 & `ACTH result`> 13.9), 1, 0)) #%>%
# dat <- final_dataset %>%
# select(`Hospital folder number`,`Random cortisol result`, `ACTH sample drawn`, `ACTH result`, `Synacthen: 0 minute cortisol result`, `Synacthen: 30 minute cortisol result`, outcome)
# write.csv(dat, 'outcome_dat.csv')
dt01 <- final_dataset %>%
select(`Hospital folder number`, `Primary medical conditions (1)`,
`Primary medical conditions (2)`,
`Primary medical conditions (3)`,
`Primary medical conditions (4)`,
`Primary medical conditions (5)`,
`Primary medical conditions (6)`,
`Primary medical conditions (7)`,
`Primary medical conditions (8)`,
`Primary medical conditions (9)`,
`Primary medical conditions (10)`) %>%
pivot_longer(cols = c(`Primary medical conditions (1)`,
`Primary medical conditions (2)`,
`Primary medical conditions (3)`,
`Primary medical conditions (4)`,
`Primary medical conditions (5)`,
`Primary medical conditions (6)`,
`Primary medical conditions (7)`,
`Primary medical conditions (8)`,
`Primary medical conditions (9)`,
`Primary medical conditions (10)`),
names_to = 'col_num',
values_to = 'Primary medical conditions') %>%
select(`Hospital folder number`, `Primary medical conditions`) %>%
filter(!is.na(`Primary medical conditions`))
dt02 <- final_dataset %>%
select(`Hospital folder number`, `Co-existing medical conditions (1)`,
`Co-existing medical conditions (2)`,
`Co-existing medical conditions (3)`,
`Co-existing medical conditions (4)`,
`Co-existing medical conditions (5)`,
`Co-existing medical conditions (6)`,
`Co-existing medical conditions (7)`,
`Co-existing medical conditions (8)`,
`Co-existing medical conditions (9)`,
`Co-existing medical conditions (10)`) %>%
pivot_longer(cols = c(`Co-existing medical conditions (1)`,
`Co-existing medical conditions (2)`,
`Co-existing medical conditions (3)`,
`Co-existing medical conditions (4)`,
`Co-existing medical conditions (5)`,
`Co-existing medical conditions (6)`,
`Co-existing medical conditions (7)`,
`Co-existing medical conditions (8)`,
`Co-existing medical conditions (9)`,
`Co-existing medical conditions (10)`),
names_to = 'col_num',
values_to = 'Co-existing medical conditions') %>%
select(`Hospital folder number`, `Co-existing medical conditions`) %>%
filter(!is.na(`Co-existing medical conditions`))
View(dt01)
dt01_1 <- dt01 %>%
mutate(primary_med_condition_TB = grepl(had_TB, `Primary medical conditions`, fixed = TRUE))
had_TB <- "TB"
dt01_1 <- dt01 %>%
mutate(primary_med_condition_TB = grepl(had_TB, `Primary medical conditions`, fixed = TRUE))
View(dt01_1)
table(dt01_1$primary_med_condition_TB)
had_TB <- "TB "
had_TB <- "TB "
dt01_1 <- dt01 %>%
mutate(primary_med_condition_TB = grepl(had_TB, `Primary medical conditions`, fixed = TRUE))
table(dt01_1$primary_med_condition_TB)
had_TB <- "TB"
dt01_1 <- dt01 %>%
mutate(primary_med_condition_TB = grepl(had_TB, `Primary medical conditions`, fixed = TRUE))
dt01_1 <- dt01 %>%
mutate(primary_med_condition_TB = ifelse(`Primary medical conditions`=='TB. IRIS', FALSE, grepl(had_TB, `Primary medical conditions`, fixed = TRUE)))
x=as.numeric(dt01_1$primary_med_condition_TB)
dt01_1 <- dt01 %>%
mutate(primary_med_condition_TB = ifelse(`Primary medical conditions`=='TB. IRIS' | `Primary medical conditions`=='TB Iris', FALSE, grepl(had_TB, `Primary medical conditions`, fixed = TRUE))) %>%
group_by(`Hospital folder number`) %>%
mutate(tuberculosis = )
dt01_1 <- dt01 %>%
mutate(primary_med_condition_TB = ifelse(`Primary medical conditions`=='TB. IRIS' | `Primary medical conditions`=='TB Iris', FALSE, grepl(had_TB, `Primary medical conditions`, fixed = TRUE)))
View(dt01_1)
dt01_1 <- dt01 %>%
left_join(dt02, by = `Hospital folder number`)
View(dt02)
dt01_1 <- dt01 %>%
left_join(dt02, by = 'Hospital folder number')
View(dt01_1)
dt01_1 <- dt01 %>%
# left_join(dt02, by = 'Hospital folder number') %>%
mutate(primary_med_condition_TB = ifelse(`Primary medical conditions`=='TB. IRIS' | `Primary medical conditions`=='TB Iris', FALSE, grepl(had_TB, `Primary medical conditions`, fixed = TRUE))) %>%
group_by(`Hospital folder number`) %>%
mutate(tuberculosis = max(as.numeric(primary_med_condition_TB)),
n_primary_med_conditions = max(1:length(`Hospital folder number`))
)
View(dt01_1)
dt02_1 <- dt02 %>%
# left_join(dt02, by = 'Hospital folder number') %>%
mutate(Coexisting_medical_conditions_TB = #ifelse(`Co-existing medical conditions`=='TB. IRIS' | `Co-existing medical conditions` =='TB Iris', FALSE,
grepl(had_TB, `Co-existing medical conditions`, fixed = TRUE))
View(dt02_1)
dt02_1 <- dt02 %>%
# left_join(dt02, by = 'Hospital folder number') %>%
mutate(Coexisting_medical_conditions_TB = #ifelse(`Co-existing medical conditions`=='TB. IRIS' | `Co-existing medical conditions` =='TB Iris', FALSE,
grepl(had_TB, `Co-existing medical conditions`, fixed = TRUE))#) %>%
dt02_1 <- dt02 %>%
# left_join(dt02, by = 'Hospital folder number') %>%
mutate(Coexisting_medical_conditions_TB = #ifelse(`Co-existing medical conditions`=='TB. IRIS' | `Co-existing medical conditions` =='TB Iris', FALSE,
grepl(had_TB, `Co-existing medical conditions`, fixed = TRUE)) %>%
group_by(`Hospital folder number`) %>%
mutate(tuberculosis_2 = max(as.numeric(Coexisting_medical_conditions_TB)),
n_Coexisting_medical_conditions = max(1:length(`Hospital folder number`))
)
had_TB <- c("TB", 'MDR')
dt01_1 <- dt01 %>%
# left_join(dt02, by = 'Hospital folder number') %>%
mutate(primary_med_condition_TB = ifelse(`Primary medical conditions`=='TB. IRIS' | `Primary medical conditions`=='TB Iris', FALSE, grepl(had_TB, `Primary medical conditions`, fixed = TRUE))) %>%
group_by(`Hospital folder number`) %>%
mutate(tuberculosis = max(as.numeric(primary_med_condition_TB)),
n_primary_med_conditions = max(1:length(`Hospital folder number`))
)
had_TB <- "TB"
dt01_1 <- dt01 %>%
# left_join(dt02, by = 'Hospital folder number') %>%
mutate(primary_med_condition_TB = ifelse(`Primary medical conditions`=='TB. IRIS' | `Primary medical conditions`=='TB Iris', FALSE, ifelse(`Primary medical conditions`=='MDR', TRUE,grepl(had_TB, `Primary medical conditions`, fixed = TRUE)))) %>%
group_by(`Hospital folder number`) %>%
mutate(tuberculosis = max(as.numeric(primary_med_condition_TB)),
n_primary_med_conditions = max(1:length(`Hospital folder number`))
)
dt01_1 <- dt01 %>%
# left_join(dt02, by = 'Hospital folder number') %>%
mutate(primary_med_condition_TB = ifelse(`Primary medical conditions`=='TB. IRIS' | `Primary medical conditions`=='TB Iris', FALSE, ifelse(`Primary medical conditions`=='MDR', TRUE,grepl(had_TB, `Primary medical conditions`, fixed = TRUE)))) %>%
group_by(`Hospital folder number`) %>%
mutate(tuberculosis = max(as.numeric(primary_med_condition_TB)),
n_primary_med_conditions = max(1:length(`Hospital folder number`))
) %>%
distinct(`Hospital folder number`, .keep_all = T) %>%
dplyr::select(`Hospital folder number`, tuberculosis,n_primary_med_conditions)
dt02_1 <- dt02 %>%
# left_join(dt02, by = 'Hospital folder number') %>%
mutate(Coexisting_medical_conditions_TB = #ifelse(`Co-existing medical conditions`=='TB. IRIS' | `Co-existing medical conditions` =='TB Iris', FALSE,
grepl(had_TB, `Co-existing medical conditions`, fixed = TRUE)) %>%
group_by(`Hospital folder number`) %>%
mutate(tuberculosis_2 = max(as.numeric(Coexisting_medical_conditions_TB)),
n_Coexisting_medical_conditions = max(1:length(`Hospital folder number`))
) %>%
distinct(`Hospital folder number`, .keep_all = T) %>%
dplyr::select(`Hospital folder number`, tuberculosis_2,n_Coexisting_medical_conditions)
dt03 <- dt01_1 %>%
left_join(dt02_1, by = 'Hospital folder number')
dt03 <- dt01_1 %>%
inner_join(dt02_1, by = 'Hospital folder number')
dt03 <- dt01_1 %>%
full_join(dt02_1, by = 'Hospital folder number')
View(dt03)
table(final_dataset$`Current tuberculosis`)
dt03 <- dt01_1 %>%
full_join(dt02_1, by = 'Hospital folder number') %>%
dplyr::select(`Hospital folder number`, n_primary_med_conditions, n_Coexisting_medical_conditions,)
table_4data <- final_dataset %>%
mutate(HIV_duration = as.numeric(as.Date(`Date of enrolment in study`, format='%m/%d/%Y') - as.Date(`HIV, when diagnosed`, format='%m/%d/%Y')),
enrol = as.Date(`Date of enrolment in study`, format = '%m/%d/%Y'),
diagnosed = as.Date(`HIV, when diagnosed`, format = '%m/%d/%Y')) %>%
select(`Hospital folder number`, Ethnicity, Gender, `Total CD4 count...9`, `Total CD4 count...89`, `Random cortisol result`, `Synacthen: 30 minute cortisol result`, `Synacthen: 0 minute cortisol result`, `ACTH result`, Neutrophils, `Lymphocyte count`, Haemoglobin, Sodium, Hypoglycaemia, `BP (systolic)`, `BP (diastolic)`, `Current tuberculosis`, `Duration of current illness`, HIV_duration, `HIV, when diagnosed`, `Date of enrolment in study`) %>%
left_join(dt03, by = 'Hospital folder number')
View(table_4data)
x = final_dataset%>% select(`Total CD4 count...9`, `CD4 count date`, `Total CD4 count...89`, `Date of CD4`)
View(x)
table_4data <- final_dataset %>%
mutate(mortality = ifelse((`3 followup_patientstatus`=='Deceased --> EXIT form' | `6 followup_patientstatus`=='Deceased --> EXIT form' | `12 followup_patientstatus`=='Deceased --> EXIT form'), 1, 0)) %>%
mutate(HIV_duration = as.numeric(as.Date(`Date of enrolment in study`, format='%m/%d/%Y') - as.Date(`HIV, when diagnosed`, format='%m/%d/%Y')),
enrol = as.Date(`Date of enrolment in study`, format = '%m/%d/%Y'),
diagnosed = as.Date(`HIV, when diagnosed`, format = '%m/%d/%Y')) %>%
select(`Hospital folder number`, Ethnicity, Gender, `Total CD4 count...9`, `Random cortisol result`, `Synacthen: 30 minute cortisol result`, `Synacthen: 0 minute cortisol result`, `ACTH result`, Neutrophils, `Lymphocyte count`, Haemoglobin, Sodium, Hypoglycaemia, `BP (systolic)`, `BP (diastolic)`, `Current tuberculosis`, `Duration of current illness`, HIV_duration, `HIV, when diagnosed`, `Date of enrolment in study`, mortality) %>%
left_join(dt03, by = 'Hospital folder number')
table_4Adata_1 <- table_4data %>%
dplyr::select(Ethnicity, Gender, `Total CD4 count...9`, `Random cortisol result`, `Synacthen: 30 minute cortisol result`, `Synacthen: 0 minute cortisol result`,`ACTH result`, Neutrophils, `Lymphocyte count`, Haemoglobin, mortality) %>%
tbl_summary(#clinical,
missing = "no",
by = mortality,
label = list(`Total CD4 count...9` ~ 'Total CD4 count')) %>%
add_p() %>%
add_n() %>%
modify_header(label = "Variable") %>% # update the column header
bold_labels()
table_4Adata_1
table(table_4data$mortality)
table_mortality <- final_dataset %>%
select(`Hospital folder number`, `3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`) %>%
pivot_longer(cols = c(`3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`),
names_to = 'col_num',
values_to = 'followup_patientstatus') %>%
select(`Hospital folder number`, `followup_patientstatus`) %>%
filter(!is.na(`followup_patientstatus`))
View(table_mortality)
table_mortality <- final_dataset %>%
select(`Hospital folder number`, `3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`) %>%
pivot_longer(cols = c(`3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`),
names_to = 'col_num',
values_to = 'followup_patientstatus') %>%
select(`Hospital folder number`, `followup_patientstatus`) %>%
mutate(mortality = ifelse(followup_patientstatus == 'Deceased --> EXIT form', 1,0))
table(table_mortality$mortality)
table_mortality <- final_dataset %>%
select(`Hospital folder number`, `3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`) %>%
pivot_longer(cols = c(`3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`),
names_to = 'col_num',
values_to = 'followup_patientstatus') %>%
select(`Hospital folder number`, `followup_patientstatus`) %>%
mutate(mortality = max(ifelse(followup_patientstatus == 'Deceased --> EXIT form', 1,0))) %>%
distinct(`Hospital folder number`, .keep_all = T)
View(table_mortality)
table_mortality <- final_dataset %>%
select(`Hospital folder number`, `3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`) %>%
pivot_longer(cols = c(`3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`),
names_to = 'col_num',
values_to = 'followup_patientstatus') %>%
select(`Hospital folder number`, `followup_patientstatus`) %>%
group_by(`Hospital folder number`) %>%
mutate(mortality = max(ifelse(followup_patientstatus == 'Deceased --> EXIT form', 1,0), na.rm = T)) %>%
distinct(`Hospital folder number`, .keep_all = T)
View(table_mortality)
table_mortality <- final_dataset %>%
select(`Hospital folder number`, `3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`) %>%
pivot_longer(cols = c(`3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`),
names_to = 'col_num',
values_to = 'followup_patientstatus') %>%
select(`Hospital folder number`, `followup_patientstatus`) %>%
group_by(`Hospital folder number`) %>%
mutate(mortality = ifelse(followup_patientstatus == 'Deceased --> EXIT form', 1,0)) %>%
distinct(`Hospital folder number`, .keep_all = T)
table_mortality <- final_dataset %>%
select(`Hospital folder number`, `3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`) %>%
pivot_longer(cols = c(`3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`),
names_to = 'col_num',
values_to = 'followup_patientstatus') %>%
select(`Hospital folder number`, `followup_patientstatus`) %>%
group_by(`Hospital folder number`) %>%
mutate(mortality = ifelse(followup_patientstatus == 'Deceased --> EXIT form', 1,ifelse(is.na(followup_patientstatus) == 0, 0)))
table_mortality <- final_dataset %>%
select(`Hospital folder number`, `3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`) %>%
pivot_longer(cols = c(`3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`),
names_to = 'col_num',
values_to = 'followup_patientstatus') %>%
select(`Hospital folder number`, `followup_patientstatus`) %>%
group_by(`Hospital folder number`) %>%
mutate(mortality = ifelse(followup_patientstatus == 'Deceased --> EXIT form', 1,ifelse(is.na(followup_patientstatus), 0, 0)))
View(table_mortality)
table(table_mortality$followup_patientstatus)
table_mortality <- final_dataset %>%
select(`Hospital folder number`, `3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`) %>%
pivot_longer(cols = c(`3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`),
names_to = 'col_num',
values_to = 'followup_patientstatus') %>%
select(`Hospital folder number`, `followup_patientstatus`) %>%
group_by(`Hospital folder number`) %>%
mutate(mortality = ifelse(followup_patientstatus == 'Deceased --> EXIT form', 1,ifelse(followup_patientstatus == 'Alive', 0, 0)))
View(table_mortality)
table_mortality <- final_dataset %>%
select(`Hospital folder number`, `3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`) %>%
pivot_longer(cols = c(`3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`),
names_to = 'col_num',
values_to = 'followup_patientstatus') %>%
select(`Hospital folder number`, `followup_patientstatus`) %>%
group_by(`Hospital folder number`) %>%
mutate(mortality = ifelse(followup_patientstatus == 'Deceased --> EXIT form', 1,ifelse(followup_patientstatus == 'Alive', 0, 0))) %>%
mutate(mortality = ifelse(is.na(mortality)==0, mortality))
table(table_mortality$mortality)
table_mortality <- final_dataset %>%
select(`Hospital folder number`, `3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`) %>%
pivot_longer(cols = c(`3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`),
names_to = 'col_num',
values_to = 'followup_patientstatus') %>%
select(`Hospital folder number`, `followup_patientstatus`) %>%
group_by(`Hospital folder number`) %>%
mutate(mortality = ifelse(followup_patientstatus == 'Deceased --> EXIT form', 1,ifelse(followup_patientstatus == 'Alive', 0, 0))) #%>%
table_mortality <- final_dataset %>%
select(`Hospital folder number`, `3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`) %>%
pivot_longer(cols = c(`3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`),
names_to = 'col_num',
values_to = 'followup_patientstatus') %>%
select(`Hospital folder number`, `followup_patientstatus`) %>%
group_by(`Hospital folder number`) %>%
mutate(mortality = ifelse(followup_patientstatus == 'Deceased --> EXIT form', 1,ifelse(followup_patientstatus == 'Alive', 0, 0))) %>%
select(`Hospital folder number`, mortality)
table_mortality[is.na(table_mortality)] <- 0
View(table_mortality)
table_mortality <- final_dataset %>%
select(`Hospital folder number`, `3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`) %>%
pivot_longer(cols = c(`3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`),
names_to = 'col_num',
values_to = 'followup_patientstatus') %>%
select(`Hospital folder number`, `followup_patientstatus`) %>%
group_by(`Hospital folder number`) %>%
mutate(mortality = ifelse(followup_patientstatus == 'Deceased --> EXIT form', 1,ifelse(followup_patientstatus == 'Alive', 0, 0))) %>%
select(`Hospital folder number`, followup_patientstatus, mortality)
table_mortality[is.na(table_mortality)] <- 0
table_mortality$followup_patientstatus
table_mortality <- final_dataset %>%
select(`Hospital folder number`, `3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`) %>%
pivot_longer(cols = c(`3 followup_patientstatus`, `6 followup_patientstatus`, `12 followup_patientstatus`),
names_to = 'col_num',
values_to = 'followup_patientstatus') %>%
select(`Hospital folder number`, `followup_patientstatus`) %>%
group_by(`Hospital folder number`) %>%
mutate(mortality = ifelse(followup_patientstatus == 'Deceased --> EXIT form', 1,ifelse(followup_patientstatus == 'Alive', 0, 0))) %>%
select(`Hospital folder number`, mortality)
table_mortality[is.na(table_mortality)] <- 0
table_mortality1 <- table_mortality %>%
group_by(`Hospital folder number`) %>%
mutate(mortality_1 = max(mortality))
View(table_mortality1)
table_mortality1 <- table_mortality %>%
group_by(`Hospital folder number`) %>%
mutate(mortality_1 = max(mortality)) %>%
distinct(`Hospital folder number`, .keep_all = T)
table_mortality1 <- table_mortality %>%
group_by(`Hospital folder number`) %>%
mutate(mortality = max(mortality)) %>%
distinct(`Hospital folder number`, .keep_all = T) %>%
select(`Hospital folder number`, mortality)
View(table_mortality1)
table_mortality1 <- table_mortality %>%
group_by(`Hospital folder number`) %>%
mutate(mortality = max(mortality)) %>%
distinct(`Hospital folder number`, .keep_all = T)
table(table_mortality1$mortality)
table_4data <- final_dataset %>%
left_join(table_mortality1, by = 'Hospital folder number') %>%
mutate(HIV_duration = as.numeric(as.Date(`Date of enrolment in study`, format='%m/%d/%Y') - as.Date(`HIV, when diagnosed`, format='%m/%d/%Y')),
enrol = as.Date(`Date of enrolment in study`, format = '%m/%d/%Y'),
diagnosed = as.Date(`HIV, when diagnosed`, format = '%m/%d/%Y')) %>%
select(`Hospital folder number`, Ethnicity, Gender, `Total CD4 count...9`, `Random cortisol result`, `Synacthen: 30 minute cortisol result`, `Synacthen: 0 minute cortisol result`, `ACTH result`, Neutrophils, `Lymphocyte count`, Haemoglobin, Sodium, Hypoglycaemia, `BP (systolic)`, `BP (diastolic)`, `Current tuberculosis`, `Duration of current illness`, HIV_duration, `HIV, when diagnosed`, `Date of enrolment in study`, mortality) %>%
left_join(dt03, by = 'Hospital folder number')
table_4Adata_1 <- table_4data %>%
dplyr::select(Ethnicity, Gender, `Total CD4 count...9`, `Random cortisol result`, `Synacthen: 30 minute cortisol result`, `Synacthen: 0 minute cortisol result`,`ACTH result`, Neutrophils, `Lymphocyte count`, Haemoglobin, mortality) %>%
tbl_summary(#clinical,
missing = "no",
by = mortality,
label = list(`Total CD4 count...9` ~ 'Total CD4 count')) %>%
add_p() %>%
add_n() %>%
modify_header(label = "Variable") %>% # update the column header
bold_labels()
table_4Adata_1
shapiro.test(final_dataset$`Total CD4 count...9`)
shapiro.test(final_dataset$`ACTH result`)
shapiro.test(final_dataset$`Lymphocyte count`)
shapiro.test(final_dataset$Neutrophils)
table_4Adata_1 <- table_4data %>%
dplyr::select(Ethnicity, Gender, `Total CD4 count...9`, `Random cortisol result`, `Synacthen: 30 minute cortisol result`, `Synacthen: 0 minute cortisol result`,`ACTH result`, Neutrophils, `Lymphocyte count`, Haemoglobin, mortality) %>%
tbl_summary(#clinical,
missing = "no",
by = mortality,
statistic = list(all_continuous() ~ "{mean} ({sd})"),
label = list(`Total CD4 count...9` ~ 'Total CD4 count')
) %>%
add_p() %>%
add_n() %>%
modify_header(label = "Variable") %>% # update the column header
bold_labels()
table_4Adata_1
table_4Adata_2 <- table_4data %>%
dplyr::select(Sodium, Hypoglycaemia, `BP (systolic)`, `BP (diastolic)`, `Current tuberculosis`, `Duration of current illness`, HIV_duration, `HIV, when diagnosed`, `Date of enrolment in study`,  mortality) %>%
tbl_summary(#clinical,
missing = "no",
by = mortality,
statistic = list(all_continuous() ~ "{mean} ({sd})")#,
# label = list(`Total CD4 count...9` ~ 'Total CD4 count')
) %>%
add_p() %>%
add_n() %>%
modify_header(label = "Variable") %>% # update the column header
bold_labels()
table_4Adata_1 <- table_4data %>%
dplyr::select(Ethnicity, Gender, `Total CD4 count...9`, `Random cortisol result`, `Synacthen: 30 minute cortisol result`, `Synacthen: 0 minute cortisol result`,`ACTH result`, Neutrophils, `Lymphocyte count`, Haemoglobin, mortality) %>%
tbl_summary(#clinical,
missing = "no",
by = mortality,
statistic = list(all_continuous() ~ "{mean} ({sd})"),
label = list(`Total CD4 count...9` ~ 'Total CD4 count')
) %>%
add_p() %>%
add_n() %>%
modify_header(label = "Variable") %>% # update the column header
bold_labels()
table_4Adata_1
table_4Adata_1 <- table_4data %>%
dplyr::select(Ethnicity, Gender, `Total CD4 count...9`, `Random cortisol result`, `Synacthen: 30 minute cortisol result`, `Synacthen: 0 minute cortisol result`,`ACTH result`, Neutrophils, `Lymphocyte count`, Haemoglobin, mortality) %>%
tbl_summary(#clinical,
missing = "no",
by = mortality,
# statistic = list(all_continuous() ~ "{mean} ({sd})"),
label = list(`Total CD4 count...9` ~ 'Total CD4 count')
) %>%
add_p() %>%
add_n() %>%
modify_header(label = "Variable") %>% # update the column header
bold_labels()
table_4Adata_1
unlink("analysis_file_cache", recursive = TRUE)
150+522
6*.3
5*.3
